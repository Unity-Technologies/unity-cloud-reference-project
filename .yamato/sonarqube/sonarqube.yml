{% metadata_file .yamato/globals.metafile %}
{% metadata_file .yamato/sonarqube/sonarqube-config.metafile %}
---

SonarQube_Dotnet_Scan:
  name: "SonarQube Unity Project Scan"
  agent:
    type: Unity::VM
    image: package-ci/win10-sonar:stable
    flavor: b1.large
  commands:
    - git submodule update --init --recursive
    - |
     cd %YAMATO_WORK_DIR%
     unity-downloader-cli -u %YAMATO_WORK_DIR%\{{project_path}} -c Editor -c Windows -w --fast
    - |
     cd %YAMATO_WORK_DIR%
     unity-config settings editor-path %YAMATO_WORK_DIR%\.Editor
    - unity-config project add dependency com.unity.ide.rider@{{rider_version}} -p %YAMATO_WORK_DIR%\{{project_path}}
    - |
      %YAMATO_WORK_DIR%\.Editor\Unity.exe -username %RP_DEV_USER% -password %RP_DEV_PWD% -appId %RP_APP_ID% -projectPath %YAMATO_WORK_DIR%\{{project_path}} -batchmode -quit -nographics -logFile Editor.log -executeMethod Packages.Rider.Editor.RiderScriptEditor.SyncSolution
    - |
      IF "%YAMATO_PR_ID%" == "" ( set SONAR_ANALYSIS_TYPE_PARAM=/d:sonar.branch.name=%GIT_BRANCH% ) ELSE ( set SONAR_ANALYSIS_TYPE_PARAM=/d:sonar.pullrequest.key=%YAMATO_PR_ID% /d:sonar.pullrequest.branch=%GIT_BRANCH% /d:sonar.pullrequest.base=%YAMATO_PR_TARGET_BRANCH% )
      cmd /v /s /c "dotnet sonarscanner begin /k:{{project_id}} /n:{{project_id}} /d:sonar.host.url={{production_url}} /v:{{sonar_project_version}} /d:sonar.login=!SONAR_TOKEN! /d:sonar.projectBaseDir=%YAMATO_WORK_DIR%\{{project_path}} /d:sonar.qualitygate.wait=true /d:sonar.scm.provider=git /d:sonar.links.scm={{project_git_url}} %SONAR_ANALYSIS_TYPE_PARAM%
    - dotnet msbuild %YAMATO_WORK_DIR%\{{project_path}}\{{project_name}}.sln /t:Rebuild /p:SonarQubeTestProject=false
    - cmd /v /s /c "dotnet sonarscanner end" /d:sonar.login=!SONAR_TOKEN!
  artifacts:
    logs:
      paths:
        - "**/*.log"
        - "*.log"
